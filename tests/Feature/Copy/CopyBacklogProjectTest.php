<?php

namespace tests\Feature\Copy;

use tests\Feature\TestCase\TestCaseTemporaryProject;
use Takuya\BacklogApiClient\Backup\Copy\BacklogCopy;

class CopyBacklogProjectTest extends TestCaseTemporaryProject {
  protected function setUp (): void {
    parent::setUp(); // TODO: Change the autogenerated stub
    $this->api->enableLogging();
  }
  
  protected function tearDown (): void {
    $this->api->disableLogging();
    parent::tearDown(); // TODO: Change the autogenerated stub
  }
  
  
  public function test_copy_project_and_issues_and_comments () {


    $projects = $this->api->getProjectList();
    $project = null;
    foreach ( $projects as $project ) {
      if(preg_match('/TAKU/',$project->projectKey)>0){
        dump($project);
        break;
      }
    }
    $src_project_id = $project->id;
    //スペースをまたぐ場合を想定する
    $src_cli = $this->api;
    $dst_cli = $this->api;
    $woker = new BacklogCopy($src_cli,$dst_cli);
    $woker->copyProject($src_project_id,$this->project_id);
    
    $src_issue_list = $src_cli->issue_ids($src_project_id);
    $dst_issue_list = $dst_cli->issue_ids($this->project_id);
    $this->assertEquals(sizeof($src_issue_list),sizeof($dst_issue_list));
    //
    $src_wiki_list = $src_cli->getWikiPageList(['projectIdOrKey' =>$src_project_id]);
    $dst_wiki_list = $dst_cli->getWikiPageList(['projectIdOrKey' =>$this->project_id]);
    $this->assertEquals(sizeof($src_wiki_list),sizeof($dst_wiki_list));
  
  
  
  
  
  
  }
  
}